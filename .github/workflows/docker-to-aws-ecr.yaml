on:
  push:
    branches:
      - '*'
      - '**'
  workflow_dispatch:

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: eu-west-1
  IMAGE: 244530008913.dkr.ecr.eu-west-1.amazonaws.com/kandidat-2026sesnur:latest
  CANDIDATE: kandidat-2026sesnur
  ALARM_EMAIL: glenn.bech@gmail.com

jobs:
  # Builds a new container image, and pushes it on every commit to the repository
  # Also pushes a tag called "latest" to track the latest commit
  build_docker_image:
    name: Push Docker image to ECR
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Build container image
        run: docker build -t ppe .

      - name: Build and push Docker image
        if: github.ref == 'refs/heads/main'
        run: |
          aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin 244530008913.dkr.ecr.eu-west-1.amazonaws.com
          rev=$(git rev-parse --short HEAD)
          docker build -t ppe .
          docker tag ppe 244530008913.dkr.ecr.eu-west-1.amazonaws.com/kandidat-2026sesnur:$rev
          docker tag ppe 244530008913.dkr.ecr.eu-west-1.amazonaws.com/kandidat-2026sesnur:latest
          docker push 244530008913.dkr.ecr.eu-west-1.amazonaws.com/kandidat-2026sesnur:$rev
          docker push 244530008913.dkr.ecr.eu-west-1.amazonaws.com/kandidat-2026sesnur:latest

  terraform:
    name: "Terraform"
    needs: build_docker_image
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        id: init
        run: terraform init
        working-directory: ./infra

      - name: Terraform Plan
        id: plan
        run: terraform plan -var="candidate=$CANDIDATE" -var="image=$IMAGE" -var="alarm_email=$ALARM_EMAIL" -var="region"=$AWS_REGION -no-color
        working-directory: ./infra
        continue-on-error: false

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        run: terraform apply -var="candidate=$CANDIDATE" -var="image=$IMAGE" -var="alarm_email=$ALARM_EMAIL" -var="region"=$AWS_REGION -auto-approve
        working-directory: ./infra